name: GCP Instance Terraform Deployment

on: 
  push:
    branches:
      - main
    paths:
      - terraform/**
      
  workflow_dispatch:

env:
  TF_VAR_project: ${{ vars.TF_VAR_project }}
  TF_VAR_name: ${{ vars.TF_VAR_name }}
  TF_VAR_region: ${{ vars.TF_VAR_region }}
  TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET}}
  TF_STATE_PREFIX: ${{  vars.TF_STATE_PREFIX }}


jobs:
  terraform-deploy:  
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Git repo
      uses: actions/checkout@v3.0.0

    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v2"
      with:
        credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
        create_credentials_file: true
        export_environment_variables: true
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
          terraform_version: "1.1.7"

    - name: Prepare backend config
      id: prepare
      working-directory: ./terraform/
      run: |
        envsubst < backend.conf
        envsubst < backend.conf > backend.conf.generated

    - name: Terraform Backend Init
      working-directory: ./terraform/
      run: |
          terraform init --backend-config=backend.conf.generated
    
    - name: Terraform plan
      working-directory: ./terraform/
      run: |
        echo "$creds" >> key.json
        terraform init
        terraform plan -var gcp_credentials=./key.json
      env:
        creds: ${{ secrets.GOOGLE_CREDENTIALS }} 

        # Trigger manual approval before apply
    # - uses: trstringer/manual-approval@v1
    #   with:
    #     secret: ${{ github.TOKEN }}
    #     approvers: pman06
    #     minimum-approvals: 1
    #     issue-title: "Deploying v1.0.0 to prod"
    #     issue-body: "Review the terraform plan, then approve or deny the deployment of v1.0.0 to prod."
    #     exclude-workflow-initiator-as-approver: false

    - name: Terraform apply
      working-directory: ./terraform/
      run: |
        terraform apply --auto-approve=true -var gcp_credentials=key.json