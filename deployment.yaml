apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: test-python-app:1.1$(echo $tag)$tag${tag}1.11.1
  name: test-python-app:1.1$(echo $tag)$tag${tag}1.11.1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test-python-app:1.1$(echo $tag)$tag${tag}1.11.1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: test-python-app:1.1$(echo $tag)$tag${tag}1.11.1
    spec:
      containers:
      - image: europe-west9-docker.pkg.dev/cool-academy-433713-g7/take-home-repo/test-python-app:1.0
        name: test-python-app:1.1$(echo $tag)$tag${tag}1.11.1
      imagePullSecrets:
      - name: artifactory-secrets
---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: test-python-app:1.1$(echo $tag)$tag${tag}1.11.1
  name: test-python-svc
spec:
  ports:
  - name: 80-8000
    port: 80
    protocol: TCP
    targetPort: 8000
  selector:
    app: test-python-app:1.1$(echo $tag)$tag${tag}1.11.1
  type: ClusterIP

---


# Adding a simple secret to make our app deployable on any kubernetes cluster platform
# For security, we could use https://github.com/bitnami-labs/sealed-secrets#readme
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJldXJvcGUtd2VzdDktZG9ja2VyLnBrZy5kZXYiOnsidXNlcm5hbWUiOiJfanNvbl9rZXkiLCJwYXNzd29yZCI6IntcbiAgXCJ0eXBlXCI6IFwic2VydmljZV9hY2NvdW50XCIsXG4gIFwicHJvamVjdF9pZFwiOiBcImNvb2wtYWNhZGVteS00MzM3MTMtZzdcIixcbiAgXCJwcml2YXRlX2tleV9pZFwiOiBcIjdiNjZiZWQwYTZlYjRlZTRjNjRmNjY0MzFhNjQzYjRkY2Q0ZDhkMmRcIixcbiAgXCJwcml2YXRlX2tleVwiOiBcIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxcbk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRREl5Q2ovbCtpekk2cVlcXG4rQkxuVWx5UThUazdsY1FscjE5WDlDSitVSW93UTE0azVsUDBiRVF5SGU3dDNzS21ZcFkrL3Q0ME5Yd2pFYmtXXFxuVjV1YUYvYTV0TnJ0bVZYUENZWUxrbHU1MkJJbE5ZWVBTaUJ0S08vbHNxOVNpVUJXRnVxd3NTcTc4bTVVVE9JeFxcblRHZFlidFF4TlFKdkNHOHNGRUcxZ3hOcGhHS3R3YWZrcUswRVBxc0w1Si9TSUJOSm5QTnZ6bFNwK1NRK1diVnRcXG5aa3RCaHExMGhEZ2hsWTBhQ0JDV3VlZjR2cmI5Qld1KzIrVDhsaERHT3N3aGN1RFFGZE0rVXZwb2dlYTI5clJMXFxuSXpPMmJMYkM0ZklSRzQyTGphZTkwT3FKVXBiRnFDc0VVNEtzeWVhY2NtQ2l3YUtuK0UvYzJ3V3gvNy95b1E5K1xcblA2T2U2bzFEQWdNQkFBRUNnZ0VBQzRVUnk4bTdUcktWclFMU3ZDdEpaMWJkSDBlU1Y2S0R3eEtkVUxKWW5nM3lcXG5IckRlWnByaTloM1VqRzVUQWJrM1ZmUkpRSHFaeUQzOGsyL0JzWlRTdkVpZHBRaVVBcUI3d2VTTEFiM2RjS2dYXFxuckg4OEhyYzh2YjVEbytYVVoxRnM5QktvMlRGcGdNbTJmVTN5Ykt4VE1yZzZ1YThrc3hxVEdKSFFNU1lvMlQrTFxcbks4eDg5QUpnN0laVW9lcVdSOUh1NEJkbFhwTGJTUkhNcFUvcENYbnVNTG9pa3VaMktJbnZiL3k3N3pFSWEyN0NcXG5VSy94TnE2U01jb0dacFhFcnA0M0trdnNMdnBPTnNyV3BoNTNrd0VIN0pzUm1yVjJnQUdSdEt4UTB1cFhvQ2pjXFxuTVpoUzlIMGJRbUYxemFlWWU3NVVzTXB2TFJqR3BWazRsOSt2Ukd2RkVRS0JnUUQreTdobGp3VjhjK2tkWFd2TlxcbmFHUFVGeUFnMlhaNldBUU5vR2Evell0UWpkMFVxVFBBRUVocWt6MmhDTURydlcrNmF0UUZ6QStaY1dheUlobThcXG4yZzVUazlJbG5MbGR5eWVrSEs0bkRqc3lJT2I3UVZhK3ZVMHFoRUNCTGp4NkpsRjcxNmo2WnB2RHpDVHEwY0xOXFxuTy9OdkY2RGVQOTUvM1NtUEgxczRPU3FTTXdLQmdRREp1eGFEUktpREdmcXVrVTV4VzBTM2xtOW1Pem1jSGo4MVxcbk1EWnpyV3cxZmxGUDIzd0ZGNkdJL2tQM21xem5wQldkQ0RjVkNMWSsyQlpTTnVSRlRtc01xY2hMekloeCtJWjRcXG5FUGhEdHZYSDdDM09uOC9NMnlqOGhabFhnNCtyYWNKTVNjM1hRREkzSXhZNHhlSGErR0lIdDJqSzViOTA0bWNuXFxuaEdBTzcwNm9zUUtCZ0V3VHA4c3JHUWcvMDZyZzZmODYzQlBIaytBN0RoVVprcHcrK0c3c2dGeGMvMVhiNzRlNVxcblZPWDljTGxVVThZUG1meWZTUTh5RHJaU0ZjZTZSdFVNaHBxTjJJRkNlbFozQWk4T0lUR29IaVNwams0WEJEK1BcXG5aaXI3c2diZ04wNkJnbkxud1p5Q1pwL2ZwR1k0bTJHTU5QTkdxdEd4WUUzdFN5dGd3V3ZZSmMzaEFvR0JBSXNwXFxuYnR4YlRzd3g3Y2JqSW5QOGZDa1J0QU9ZTTZQSkVkMkZSdXNCNWJYNVQrcUJCTXNXaEM3WENOZ1VjZGJTVUw2bFxcblhpbzZlazVjRHZua09CQy9pZ1dRVWtaSDhKQisyM1NVY0U5Mk5aTVhFSHFMc0hRbmM5elA1UHFFSFdZb2JRcm5cXG5sd0k0bk91QVh1SUhVRWtZTTdnVEJFMkR0RkhUcFVtVGZoaVBhWG5oQW9HQkFKRWdla2h2TEpSaTFtVWJlM0lhXFxuSGJIL0gyU2k3aHVwWThzZEt5cml3NURyL0k5UmhRRjJRYzhKV2FuZ005aWRhZXArMk5ScUV0R0RGQnZnWGE5blxcbkxjbmtqakhDS3JxSVF3SnpobWdUZExYSjlPWHZLYSsyb3NmRUR1NURmd1JMM0M2ek5JRkdrSXNFclg3S3RMK2dcXG5CVjBzTVJ6U2lHcFNVdE1jWFRxenk5WkJcXG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXFxuXCIsXG4gIFwiY2xpZW50X2VtYWlsXCI6IFwicmVnaXN0cnktcHVsbC1zYUBjb29sLWFjYWRlbXktNDMzNzEzLWc3LmlhbS5nc2VydmljZWFjY291bnQuY29tXCIsXG4gIFwiY2xpZW50X2lkXCI6IFwiMTAzNzUyNjg2NDUyNzc3NTg4ODk3XCIsXG4gIFwiYXV0aF91cmlcIjogXCJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aFwiLFxuICBcInRva2VuX3VyaVwiOiBcImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuXCIsXG4gIFwiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsXCI6IFwiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzXCIsXG4gIFwiY2xpZW50X3g1MDlfY2VydF91cmxcIjogXCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L3JlZ2lzdHJ5LXB1bGwtc2ElNDBjb29sLWFjYWRlbXktNDMzNzEzLWc3LmlhbS5nc2VydmljZWFjY291bnQuY29tXCIsXG4gIFwidW5pdmVyc2VfZG9tYWluXCI6IFwiZ29vZ2xlYXBpcy5jb21cIlxufSIsImF1dGgiOiJYMnB6YjI1ZmEyVjVPbnNLSUNBaWRIbHdaU0k2SUNKelpYSjJhV05sWDJGalkyOTFiblFpTEFvZ0lDSndjbTlxWldOMFgybGtJam9nSW1OdmIyd3RZV05oWkdWdGVTMDBNek0zTVRNdFp6Y2lMQW9nSUNKd2NtbDJZWFJsWDJ0bGVWOXBaQ0k2SUNJM1lqWTJZbVZrTUdFMlpXSTBaV1UwWXpZMFpqWTJORE14WVRZME0ySTBaR05rTkdRNFpESmtJaXdLSUNBaWNISnBkbUYwWlY5clpYa2lPaUFpTFMwdExTMUNSVWRKVGlCUVVrbFdRVlJGSUV0RldTMHRMUzB0WEc1TlNVbEZkbWRKUWtGRVFVNUNaMnR4YUd0cFJ6bDNNRUpCVVVWR1FVRlRRMEpMWjNkbloxTnJRV2RGUVVGdlNVSkJVVVJKZVVOcUwyd3JhWHBKTm5GWlhHNHJRa3h1Vld4NVVUaFVhemRzWTFGc2NqRTVXRGxEU2l0VlNXOTNVVEUwYXpWc1VEQmlSVkY1U0dVM2RETnpTMjFaY0ZrckwzUTBNRTVZZDJwRlltdFhYRzVXTlhWaFJpOWhOWFJPY25SdFZsaFFRMWxaVEd0c2RUVXlRa2xzVGxsWlVGTnBRblJMVHk5c2MzRTVVMmxWUWxkR2RYRjNjMU54TnpodE5WVlVUMGw0WEc1VVIyUlpZblJSZUU1UlNuWkRSemh6UmtWSE1XZDRUbkJvUjB0MGQyRm1hM0ZMTUVWUWNYTk1OVW92VTBsQ1RrcHVVRTUyZW14VGNDdFRVU3RYWWxaMFhHNWFhM1JDYUhFeE1HaEVaMmhzV1RCaFEwSkRWM1ZsWmpSMmNtSTVRbGQxS3pJclZEaHNhRVJIVDNOM2FHTjFSRkZHWkUwclZYWndiMmRsWVRJNWNsSk1YRzVKZWs4eVlreGlRelJtU1ZKSE5ESk1hbUZsT1RCUGNVcFZjR0pHY1VOelJWVTBTM041WldGalkyMURhWGRoUzI0clJTOWpNbmRYZUM4M0wzbHZVVGtyWEc1UU5rOWxObTh4UkVGblRVSkJRVVZEWjJkRlFVTTBWVko1T0cwM1ZISkxWbkpSVEZOMlEzUktXakZpWkVnd1pWTldOa3RFZDNoTFpGVk1TbGx1WnpONVhHNUlja1JsV25CeWFUbG9NMVZxUnpWVVFXSnJNMVptVWtwUlNIRmFlVVF6T0dzeUwwSnpXbFJUZGtWcFpIQlJhVlZCY1VJM2QyVlRURUZpTTJSalMyZFlYRzV5U0RnNFNISmpPSFppTlVSdksxaFZXakZHY3psQ1MyOHlWRVp3WjAxdE1tWlZNM2xpUzNoVVRYSm5OblZoT0d0emVIRlVSMHBJVVUxVFdXOHlWQ3RNWEc1TE9IZzRPVUZLWnpkSldsVnZaWEZYVWpsSWRUUkNaR3hZY0V4aVUxSklUWEJWTDNCRFdHNTFUVXh2YVd0MVdqSkxTVzUyWWk5NU56ZDZSVWxoTWpkRFhHNVZTeTk0VG5FMlUwMWpiMGRhY0ZoRmNuQTBNMHRyZG5OTWRuQlBUbk55VjNCb05UTnJkMFZJTjBwelVtMXlWakpuUVVkU2RFdDRVVEIxY0ZodlEycGpYRzVOV21oVE9VZ3dZbEZ0UmpGNllXVlpaVGMxVlhOTmNIWk1VbXBIY0Zack5HdzVLM1pTUjNaR1JWRkxRbWRSUkN0NU4yaHNhbmRXT0dNcmEyUllWM1pPWEc1aFIxQlZSbmxCWnpKWVdqWlhRVkZPYjBkaEwzcFpkRkZxWkRCVmNWUlFRVVZGYUhGcmVqSm9RMDFFY25aWEt6WmhkRkZHZWtFcldtTlhZWGxKYUcwNFhHNHlaelZVYXpsSmJHNU1iR1I1ZVdWclNFczBia1JxYzNsSlQySTNVVlpoSzNaVk1IRm9SVU5DVEdwNE5rcHNSamN4Tm1vMlduQjJSSHBEVkhFd1kweE9YRzVQTDA1MlJqWkVaVkE1TlM4elUyMVFTREZ6TkU5VGNWTk5kMHRDWjFGRVNuVjRZVVJTUzJsRVIyWnhkV3RWTlhoWE1GTXpiRzA1YlU5NmJXTklhamd4WEc1TlJGcDZjbGQzTVdac1JsQXlNM2RHUmpaSFNTOXJVRE50Y1hwdWNFSlhaRU5FWTFaRFRGa3JNa0phVTA1MVVrWlViWE5OY1dOb1RIcEphSGdyU1ZvMFhHNUZVR2hFZEhaWVNEZERNMDl1T0M5Tk1ubHFPR2hhYkZobk5DdHlZV05LVFZOak0xaFJSRWt6U1hoWk5IaGxTR0VyUjBsSWRESnFTelZpT1RBMGJXTnVYRzVvUjBGUE56QTJiM05SUzBKblJYZFVjRGh6Y2tkUlp5OHdObkpuTm1ZNE5qTkNVRWhySzBFM1JHaFZXbXR3ZHlzclJ6ZHpaMFo0WXk4eFdHSTNOR1UxWEc1V1QxZzVZMHhzVlZVNFdWQnRabmxtVTFFNGVVUnlXbE5HWTJVMlVuUlZUV2h3Y1U0eVNVWkRaV3hhTTBGcE9FOUpWRWR2U0dsVGNHcHJORmhDUkN0UVhHNWFhWEkzYzJkaVowNHdOa0puYmt4dWQxcDVRMXB3TDJad1IxazBiVEpIVFU1UVRrZHhkRWQ0V1VVemRGTjVkR2QzVjNaWlNtTXphRUZ2UjBKQlNYTndYRzVpZEhoaVZITjNlRGRqWW1wSmJsQTRaa05yVW5SQlQxbE5ObEJLUldReVJsSjFjMEkxWWxnMVZDdHhRa0pOYzFkb1F6ZFlRMDVuVldOa1lsTlZURFpzWEc1WWFXODJaV3MxWTBSMmJtdFBRa012YVdkWFVWVnJXa2c0U2tJck1qTlRWV05GT1RKT1drMVlSVWh4VEhOSVVXNWpPWHBRTlZCeFJVaFhXVzlpVVhKdVhHNXNkMGswYms5MVFWaDFTVWhWUld0WlRUZG5WRUpGTWtSMFJraFVjRlZ0Vkdab2FWQmhXRzVvUVc5SFFrRktSV2RsYTJoMlRFcFNhVEZ0VldKbE0wbGhYRzVJWWtndlNESlRhVGRvZFhCWk9ITmtTM2x5YVhjMVJISXZTVGxTYUZGR01sRmpPRXBYWVc1blRUbHBaR0ZsY0NzeVRsSnhSWFJIUkVaQ2RtZFlZVGx1WEc1TVkyNXJhbXBJUTB0eWNVbFJkMHA2YUcxblZHUk1XRW81VDFoMlMyRXJNbTl6WmtWRWRUVkVabmRTVERORE5ucE9TVVpIYTBselJYSllOMHQwVEN0blhHNUNWakJ6VFZKNlUybEhjRk5WZEUxaldGUnhlbms1V2tKY2JpMHRMUzB0UlU1RUlGQlNTVlpCVkVVZ1MwVlpMUzB0TFMxY2JpSXNDaUFnSW1Oc2FXVnVkRjlsYldGcGJDSTZJQ0p5WldkcGMzUnllUzF3ZFd4c0xYTmhRR052YjJ3dFlXTmhaR1Z0ZVMwME16TTNNVE10WnpjdWFXRnRMbWR6WlhKMmFXTmxZV05qYjNWdWRDNWpiMjBpTEFvZ0lDSmpiR2xsYm5SZmFXUWlPaUFpTVRBek56VXlOamcyTkRVeU56YzNOVGc0T0RrM0lpd0tJQ0FpWVhWMGFGOTFjbWtpT2lBaWFIUjBjSE02THk5aFkyTnZkVzUwY3k1bmIyOW5iR1V1WTI5dEwyOHZiMkYxZEdneUwyRjFkR2dpTEFvZ0lDSjBiMnRsYmw5MWNta2lPaUFpYUhSMGNITTZMeTl2WVhWMGFESXVaMjl2WjJ4bFlYQnBjeTVqYjIwdmRHOXJaVzRpTEFvZ0lDSmhkWFJvWDNCeWIzWnBaR1Z5WDNnMU1EbGZZMlZ5ZEY5MWNtd2lPaUFpYUhSMGNITTZMeTkzZDNjdVoyOXZaMnhsWVhCcGN5NWpiMjB2YjJGMWRHZ3lMM1l4TDJObGNuUnpJaXdLSUNBaVkyeHBaVzUwWDNnMU1EbGZZMlZ5ZEY5MWNtd2lPaUFpYUhSMGNITTZMeTkzZDNjdVoyOXZaMnhsWVhCcGN5NWpiMjB2Y205aWIzUXZkakV2YldWMFlXUmhkR0V2ZURVd09TOXlaV2RwYzNSeWVTMXdkV3hzTFhOaEpUUXdZMjl2YkMxaFkyRmtaVzE1TFRRek16Y3hNeTFuTnk1cFlXMHVaM05sY25acFkyVmhZMk52ZFc1MExtTnZiU0lzQ2lBZ0luVnVhWFpsY25ObFgyUnZiV0ZwYmlJNklDSm5iMjluYkdWaGNHbHpMbU52YlNJS2ZRPT0ifX19
kind: Secret
metadata:
  name: artifactory-secrets
type: kubernetes.io/dockerconfigjson

---

